@use "u";

@layer components {
    .button {
        border-radius: .375rem;
        padding: .5rem;

        &,
        > .button-text {
            @include u.anim-prop(color border-color background-color);
            @include u.anim-dur;
        }

        &:hover {
            cursor: pointer;
        }

        &:disabled {
            cursor: not-allowed;
        }

        &.filled {
            &:hover {
                --button-color: #{u.alpha(var(--button-color-base) 80%)};
            }

            &:active {
                --button-color: #{u.alpha(var(--button-color-base) 65%)};
            }

            &:disabled {
                --button-color: #{u.alpha(var(--button-color-base) 80%)};
            }

            > .button-text {
                --text-color: var(--button-text-color, var(--color-bg-100));
            }

            background-color: var(--button-color, var(--button-color-base));
        }

        &.outline,
        &.text {
            background-color: transparent;

            --button-color: var(--button-color-base);

            > .button-text {
                --text-color: var(--button-color);
            }

            &:disabled {
                --button-color: color-mix(in oklab, var(--button-color-base), black 30%);
            }

            &.outline {
                border-width: 1px;
                border-style: solid;
                border-color: var(--button-color);

                &:hover {
                    background-color: u.alpha(var(--button-color) var(--hover-bg-opacity, 5%));
                }

                &:active {
                    background-color: u.alpha(var(--button-color) 15%);
                }

                &:disabled {
                    background-color: unset;
                }
            }

            &.text {
                &:hover {
                    background-color: u.alpha(var(--button-color) var(--hover-bg-opacity, 10%));
                }

                &:active {
                    background-color: u.alpha(var(--button-color) 20%);
                }

                &:disabled {
                    background-color: u.alpha(var(--button-color) 10%);
                }
            }
        }

        &.primary {
            --button-color-base: var(--color-primary-400);
        }

        &.secondary {
            --button-color-base: var(--color-secondary-500);
        }

        &.accent {
            --button-color-base: var(--color-accent-300);

            &:is(.outline, .text):hover {
                --hover-bg-opacity: 10%;
            }
        }

        &.neutral {
            --button-color-base: var(--color-neutral);

            &.filled {
                --button-text-color: var(--color-neutral-content);

                &:hover {
                    --button-color: #{u.alpha(var(--color-neutral) 90%)};
                }

                &:active {
                    --button-color: #{u.alpha(var(--color-neutral) 70%)};
                }

                &:disabled {
                    --button-color: #{u.alpha(var(--color-neutral) 80%)};
                    --button-text-color: #{u.alpha(var(--color-neutral-content) 80%)};
                }
            }
        }

        &.neutral-content {
            --button-color-base: var(--color-neutral-content);

            &.filled {
                --button-text-color: var(--color-neutral);
            }
        }

        &.info {
            --button-color-base: var(--color-info-500);
        }

        &.info-700 {
            --button-color-base: var(--color-info-700);

            &.filled {
                --button-text-color: var(--color-fg-500);
            }
        }

        &.success {
            --button-color-base: var(--color-success-300);
        }

        &.warning {
            --button-color-base: var(--color-warning-300);
        }

        &.error {
            --button-color-base: var(--color-error-400);
        }
    }
}
